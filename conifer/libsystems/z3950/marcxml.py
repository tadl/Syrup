from xml.etree import ElementTree
import marctools

loc_to_unicode = marctools.locToUTF8().replace

def marcxml_to_dictionary(rec):
    tree = ElementTree.fromstring(rec)
    if tree.tag == '{http://www.loc.gov/MARC21/slim}collection':
        # thenwe only look at the first record.
        tree = tree.find('{http://www.loc.gov/MARC21/slim}record')
    dct = {}
    for df in tree.findall('{http://www.loc.gov/MARC21/slim}datafield'):
        t = df.attrib['tag']
        for sf in df.findall('{http://www.loc.gov/MARC21/slim}subfield'):
            c = sf.attrib['code']
            v = sf.text
            dct[t+c] = loc_to_unicode(v)
    return dct

def marcxml_dictionary_to_dc(dct):
    """Take a dictionary generated by marcxml_to_dictionary, and
    extract some Dublin Core elements from it. Fixme, I'm sure this
    could be way improved."""
    out = {}
    meta = [('245a', 'dc:title'), ('100a', 'dc:creator'), ('260b', 'dc:publisher'),
            ('260c', 'dc:date'), ('700a', 'dc:contributor')]
    for marc, dc in meta:
        value = dct.get(marc)
        if value:
            out[dc] = value
    if '245b' in meta and 'dc:title' in out:
        out['dc:title'] += (' %s' % meta['245b'])
    return out

    
